#解释：


# 1.GIL锁(Global Interpreter Lock)
'''
    一些语言(java c c++)是支持同一个进程中的多个线程是可以应用多核CPU的，那么我们之前说过应用多进程
的时候如果有共享数据不安全的问题啊，就是多个进程同时一个文件中去抢这个数据，大家把数据改了，但是还没
来得及去更新到原来的文件中，就被其他进程计算了，导致数据不安全的问题，所以我们是不是通过枷锁可以解决
多线程同理，一样有数据安全问题，所以python在cpython解释器中默认加锁，jpython不会，因为jpython是java开发
可编译，在cpython中无法使用多核，虽然无法使用多核，但是CPU之间的线程切换是极快的，在快速切换线程后，由
线程自己执行网络IO操作/数据传输等等，即便如此，性能上还是不如编译型语言的。
'''

import time

# time.sleep(50)



